<!DOCTYPE html>
<html lang="en">
<head>
  <title><%= title %></title>
  <script src="https://cdn.ckeditor.com/ckeditor5/39.0.1/classic/ckeditor.js"></script>
    <%- include('../General/header') %>
<style>
  body {
    overflow-y: hidden;
    padding-bottom: 0;
  }

  .ck-editor__editable_inline {
    height: 30vh;
    overflow-y: auto;
    position: relative;
    padding-right: 2rem;
  }

  #editorScrollTopBtn {
    display: block;
    position: absolute;
    top: 36px;
    right: 8px;
    padding: 0.25rem 0.5rem;
    font-weight: 600;
    font-size: 1.25rem;
    cursor: pointer;
    z-index: 10;
    color: black !important;
    background-color: white !important;
    transition: background 0.2s ease-in-out, transform 0.2s ease;
  }

  #editorScrollTopBtn:hover {
    background-color: #f3f4f6 !important; /* Tailwind's gray-100 */
    transform: translateY(-1px);
  }

  /* Force light mode for CKEditor */
  .ck.ck-editor {
    background-color: white !important;
    color: black !important;
  }

  .ck.ck-toolbar,
  .ck-editor__editable{
    background-color: white !important;
    color: black !important;
    border-color: #d1d5db !important;
  }

  
   
  .ck.ck-toolbar button,
  .ck.ck-toolbar .ck-button {
    background: white !important;
    color: black !important;
    border: none !important;
  }

  .ck.ck-toolbar .ck-button.ck-on {
    background-color: #e5e7eb !important;
  }

  .ck.ck-dropdown__panel,
  .ck.ck-list {
    background-color: white !important;
    color: black !important;
  }

  body.dark .ck.ck-content {
    background-color: dimgray !important;
  }

</style>

</head>
<body class="bg-white text-black font-sans mb-2"> <!-- Changed text-white to text-black -->


  <%- include('../General/notifications', { messages: messages }) %>

  <% let formAction = title === 'Create New Page' ? '/my-chapter/' + chapterId + '/my-pages' : '/pages/' + page.id + '/edit'; %>

  <div class="max-w-3xl mx-auto bg-white p-8 rounded-xl shadow-lg">
    <h1 class="text-3xl font-bold text-gray-800 mb-6 text-center"><%= title %></h1>
    <h2 class="text-xl font-semibold text-gray-700 mb-4 text-center">
      <%= title === 'Edit Page' ? 'Update Page Details' : 'Create a New Page' %>
    </h2>

    <form id="mainForm" method="POST" action="<%= formAction %>">
      <input type="hidden" name="_csrf" value="<%= csrfToken %>">

      <div class="mb-4">
        <label for="title" class="block text-lg font-medium text-gray-700 mb-2">Page Title:</label>
        <input 
          type="text" 
          id="title" 
          name="title" 
          value="<%= page.title || '' %>" 
          required 
          class="w-full p-3 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-indigo-500"
        >
      </div>

      <div class="mb-4 relative rounded-xl">
        <label for="editor" class="block text-lg font-medium text-gray-700 mb-2">Content:</label>
        
        <!-- CKEditor wrapper to isolate light mode -->
        <div class="not-dark">
          <textarea 
            type="text"
            id="editor"
            name="content"
            aria-label="Content"
          ><%- (page.content || '').trim() %></textarea>
        </div>

        <div id="charCount" class="text-sm text-gray-500 mt-1">0 / 100000 characters</div>

        <!-- Scroll to Top Button for CKEditor -->
        <button id="editorScrollTopBtn" type="button" onclick="scrollEditorToTop()" aria-label="Scroll to top of editor">â¬†</button>
      </div>

      <div class="mt-6">
        <button 
          type="submit"
          class="w-full bg-indigo-600 text-white font-semibold py-2 px-6 rounded-lg border rounded-xl hover:bg-indigo-700 focus:ring-2 focus:ring-indigo-500 transition"
        >
          <%= title.includes('Edit') ? 'Update' : 'Create' %> Page
        </button>
      </div>
    </form>
  </div>

  <!-- CKEditor + Character Count + Scroll Button Logic -->
  <script>
    let editorInstance;
    const maxCharacters = 100000;
    const charCount = document.getElementById('charCount');

    function scrollEditorToTop() {
      const editableArea = document.querySelector('.ck-editor__editable_inline');
      if (editableArea) {
        editableArea.scrollTo({ top: 0, behavior: 'smooth' });
      }
    }

    ClassicEditor
      .create(document.querySelector('#editor'))
      .then(editor => {
        editorInstance = editor;

        const updateCount = () => {
          const textContent = editor.getData().replace(/<[^>]*>/g, '').trim();
          const len = textContent.length;
          charCount.textContent = `${len} / ${maxCharacters} characters`;
          charCount.classList.toggle("text-red-500", len > maxCharacters);
        };

        editor.model.document.on('change:data', updateCount);
        updateCount();

        // Prevent submission if limit exceeded
        document.getElementById("mainForm").addEventListener("submit", function(e) {
          const textContent = editor.getData().replace(/<[^>]*>/g, '').trim();
          if (textContent.length > maxCharacters) {
            e.preventDefault();
            alert("Content exceeds maximum character limit of 100000.");
          }
        });
      })
      .catch(error => {
        console.error("CKEditor failed to initialize:", error);
      });
  </script>
</body>
</html>
