<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>

<body class="bg-gray-100 min-h-screen flex items-center justify-center">

  <div class="bg-white p-8 rounded-lg shadow-md w-full max-w-md">
    <h2 class="text-2xl font-bold mb-6 text-center">Sign In</h2>
    <form id="signin-form" class="space-y-4">
      
      <!-- Role selection buttons -->
      <div>
        <div class="flex justify-between">
          <button type="button" data-role="educator"
            class="role-btn w-1/2 mr-2 py-2 rounded-lg border border-gray-300 text-gray-700 font-semibold hover:bg-blue-100 focus:outline-none">
            Educator
          </button>
          <button type="button" data-role="student"
            class="role-btn w-1/2 ml-2 py-2 rounded-lg border border-gray-300 text-gray-700 font-semibold hover:bg-green-100 focus:outline-none">
            Student
          </button>
        </div>
        <!-- Error message -->
        <p id="role-error" class="text-red-500 text-sm hidden mt-1">Please select a role.</p>
      </div>

      <!-- Hidden input for selected role -->
      <input type="hidden" id="role" required>

      <!-- Email -->
      <div>
        <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
        <input type="email" id="email" required
          class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500">
      </div>

      <!-- Password -->
      <div>
        <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
        <input type="password" id="password" required
          class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500">
      </div>

      <button type="submit"
        class="w-full py-2 px-4 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700">
        Sign In
      </button>
    </form>
  </div>

  <script>
    const roleButtons = document.querySelectorAll('.role-btn');
    const roleInput = document.getElementById('role');
    const roleError = document.getElementById('role-error');
    const signinForm = document.getElementById('signin-form');

    // Handle role button selection
    roleButtons.forEach(btn => {
      btn.addEventListener('click', () => {
        roleButtons.forEach(b => b.classList.remove('bg-blue-600', 'bg-green-600', 'text-white'));
        btn.classList.add(
          btn.dataset.role === 'educator' ? 'bg-blue-600' : 'bg-green-600',
          'text-white'
        );
        roleInput.value = btn.dataset.role;
        roleError.classList.add('hidden');
      });
    });

    // Handle form submission
    signinForm.addEventListener('submit', async (e) => {
      e.preventDefault();

      if (!roleInput.value) {
        roleError.classList.remove('hidden');
        return;
      }

      const credentials = {
        email: document.getElementById('email').value,
        password: document.getElementById('password').value,
        role: roleInput.value
      };

      try {
        const res = await fetch('/userssignin', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(credentials)
        });

        const data = await res.json();

        if (res.ok) {
          // Redirect based on role
          window.location.href = credentials.role === 'educator' ? '/Educator' : '/Student';
        } else {
          alert(data.error || 'Invalid credentials');
        }

      } catch (err) {
        console.error(err);
        alert('Something went wrong. Please try again.');
      }
    });
  </script>

</body>

</html>
